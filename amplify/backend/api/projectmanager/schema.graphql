type User @model {
	id: ID!
	organization: Organization @connection(name: "OrganizationEmployees")
}

type Organization @model {
	id: ID!
	name: String!
	employees: [User]! @connection(name: "OrganizationEmployees")
  projects: [Project]! @connection(name: "OrganizationProjects")
}

type Project @model {
	id: ID!
  organization: Organization! @connection(name: "OrganizationProjects")
	name: String!
	unique_id: String!
	tables: [Table]! @connection(name: "ProjectTables")
}

type Table @model {
	id: ID!
  name: String!
	project: Project! @connection(name: "ProjectTables")
	structure: [Structure]! @connection(name: "TableStructure")
	rows: [Row]! @connection(name: "TableRows")
}

type Structure @model{
	id: ID!
	table: Table! @connection(name: "TableStructure")
	header: String!
	position: Int!
	width: Float!
	defaultSortOrder: SortOrderType!
	type: StructureType!
  cells:[Cell]!@connection(name:"CellStructure")
}

enum StructureType {
	INT
	FLOAT
	STRING
	BOOLEAN
	DATETIME
}

enum SortOrderType {
	ASC
	DESC
}

type Row @model{
	id: ID!
  table: Table! @connection(name: "TableRows")
	cells: [Cell]! @connection(name:"RowCells")
}

type Cell @model{
	id: ID!
  row: Row! @connection(name:"RowCells")
	structure: Structure! @connection(name:"CellStructure")
	data: CellData!
}

type CellData {
  int: Int
  float: Float
  string: String
  bool: Boolean
  datetime: AWSDateTime
}
